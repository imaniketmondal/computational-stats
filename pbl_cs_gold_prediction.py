# -*- coding: utf-8 -*-
"""pbl cs gold prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oUGecM3ET6uXVahU3IWRM9NZHpEcZbJJ
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import r2_score

gold = pd.read_csv('gld_price_data.csv')

gold.head()

gold.shape

gold.info()

gold.describe()

correlation = gold.corr()

plt.figure(figsize=(6,6))
sns.heatmap(correlation,cbar=True,square=True,annot=True,annot_kws={"size":8},cmap="plasma")

print(correlation['GLD'])

sns.displot(gold['GLD'],color='blue')

"""**Splitting the Features and** **Target**

"""

X = gold.drop(['Date','GLD'],axis=1)
y = gold['GLD']
# gold is dependent and all other features are independent except date

y.shape

print(X) #dropped the gold and date values

print(y) # all gold prices

"""Tranning the model for prediction"""

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

reg = RandomForestRegressor()
reg.fit(X_train,y_train)
pred = reg.predict(X_test)
r2_score(y_test,pred)

print(y_test,pred)

Y_test= list(y_test)

plt.plot(Y_test, color='blue' , label= 'actual value')
plt.plot(pred, color='green' , label= "predicted value")
plt.title("actual value VS predicted value")
plt.xlabel("number of values")
plt.ylabel("Gold prices")
plt.legend()
plt.show

"""predicted values are plotted over of green(test values) .. we can see that the actual value and predicted value are very much closed to each other."""